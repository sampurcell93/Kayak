// Generated by CoffeeScript 1.6.3
/* PACKAGES*/


(function() {
  var app, cc, express, mongo, port, yelp, _;

  express = require("express");

  mongo = require("mongodb");

  _ = require('underscore');

  app = express();

  yelp = require("yelp").createClient({
    consumer_key: "hq2hHKOYSQFmHU_wBOosyg",
    consumer_secret: "WvnfNhJ1Umcdcnyxo8xJ9QO5tGg",
    token: "YdrbgbIcPL1zwj1JI5SD3MHOfSHgkkV2",
    token_secret: "2UEu8pkO8G24vamnDwNTdKYdbpA"
  });

  cc = function(arguuments) {
    return _.each(arguments, function(arg) {
      return console.log(arg);
    });
  };

  port = process.env.PORT || 4040;

  app.listen(port, function() {
    return cc("listening on " + port);
  });

  /* CONFIGURATION*/


  app.configure(function() {
    app.use(express.logger("dev"));
    app.set("views", __dirname + "/views");
    app.set("view engine", "jade");
    app.use(express.errorHandler());
    app.locals.pretty = true;
    app.use(express.cookieParser());
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    return app.use(express["static"](__dirname + "/public"));
  });

  /* URI SCHEME*/


  app.get("/", function(req, res) {
    return res.render("index");
  });

  app.get("/search/:lat/:lng/:offset", function(req, res) {
    var json, q, requestobj;
    q = req.params;
    requestobj = {
      ll: q.lat + "," + q.lng,
      offset: q.offset,
      term: 'food',
      sort: 1
    };
    json = {
      food: null,
      hotels: null
    };
    return yelp.search(requestobj, function(error, food) {
      if (typeof err === "undefined" || err === null) {
        json.food = food;
        requestobj.term = "hotels";
        return yelp.search(requestobj, function(error, hotels) {
          if (typeof err === "undefined" || err === null) {
            json.hotels = hotels;
            return res.json(json);
          } else {
            return res.json(json.food);
          }
        });
      } else {
        return res.json(err);
      }
    });
  });

}).call(this);
